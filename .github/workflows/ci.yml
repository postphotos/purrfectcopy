name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies (uv)
        run: |
          python -m pip install --upgrade pip
          pip install uv
      - name: Install Python deps
        run: uv pip install -r requirements.txt
      - name: Run Pyright
        run: uv run pyright pcopy
      - name: Run tests with coverage (fail if coverage < 100%)
        run: uv run pytest --cov=pcopy --cov-report=term-missing --cov-fail-under=100
      - name: Build Alpine smoke-test container
        run: docker build -f Dockerfile.alpine -t pcopy-smoketest:latest .

      - name: "Smoke-test: dry-run as root"
        run: docker run --rm pcopy-smoketest:latest --dry-run

      - name: "Smoke-test: real-run as root"
        run: docker run --rm pcopy-smoketest:latest

      - name: "Smoke-test: dry-run as non-root"
        run: |
          docker run --rm -e RUN_AS=nonroot pcopy-smoketest:latest --dry-run
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: false

  container-test:
    name: Container Smoke Test
    # This separate job runs the container-specific pytest which builds and runs
    # the smoke-test image and asserts the `pcopy do main-backup --dry-run` flow.
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies (uv)
        run: |
          python -m pip install --upgrade pip
          pip install uv
      - name: Install Python deps
        run: uv pip install -r requirements.txt
      - name: Build smoke-test image
        run: docker build -f Dockerfile.alpine -t pcopy-smoketest:ci .
      - name: Run container setup+pcopy test
        run: |
          # Run only the specific container integration test
          uv run pytest -q tests/test_setup_in_container.py::test_setup_sh_adds_pcopy_alias_in_container

  packaging-test:
    name: Packaging + Full Tests
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies (uv)
        run: |
          python -m pip install --upgrade pip
          pip install uv
      - name: Ensure build env and run full test script
        run: |
          # This runs the same test script used by developers. It will bootstrap
          # pip/build if necessary and run the wheel-inspection test.
          chmod +x ./run-all-tests.sh
          ./run-all-tests.sh --no-docker
